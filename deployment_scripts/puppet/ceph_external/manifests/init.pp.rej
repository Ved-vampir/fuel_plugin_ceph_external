--- manifests/init.pp
+++ manifests/init.pp
@@ -76,63 +76,64 @@
   # Re-enable ceph::yum if not using a Fuel iso with Ceph packages
   #include ceph::yum
 
-  include ceph::ssh
+#  include ceph::ssh
   include ceph::params
   include ceph::conf
-  Class[['ceph::ssh', 'ceph::params']] -> Class['ceph::conf']
+#  Class[['ceph::ssh', 'ceph::params']] -> Class['ceph::conf']
+  Class[['ceph::params']] -> Class['ceph::conf']
 
-  if $::fuel_settings['role'] =~ /controller|ceph/ {
-    service {'ceph':
-      ensure  => 'running',
-      enable  => true,
-      require => Class['ceph::conf']
-    }
-  }
+#  if $::fuel_settings['role'] =~ /controller|ceph/ {
+#    service {'ceph':
+#      ensure  => 'running',
+#      enable  => true,
+#      require => Class['ceph::conf']
+#    }
+#  }
 
   case $::fuel_settings['role'] {
     'primary-controller', 'controller', 'ceph-mon': {
-      include ceph::mon
+#      include ceph::mon
 
       # DO NOT SPLIT ceph auth command lines! See http://tracker.ceph.com/issues/3279
-      ceph::pool {$glance_pool:
-        user          => $glance_user,
-        acl           => "mon 'allow r' osd 'allow class-read object_prefix rbd_children, allow rwx pool=${glance_pool}'",
-        keyring_owner => 'glance',
-      }
-
-      ceph::pool {$cinder_pool:
-        user          => $cinder_user,
-        acl           => "mon 'allow r' osd 'allow class-read object_prefix rbd_children, allow rwx pool=${cinder_pool}, allow rx pool=${glance_pool}'",
-        keyring_owner => 'cinder',
-      }
-
-      Class['ceph::conf'] -> Class['ceph::mon'] ->
-      Ceph::Pool[$glance_pool] -> Ceph::Pool[$cinder_pool] ->
-      Service['ceph']
-
-      if ($::ceph::use_rgw) {
-        include ceph::radosgw
-        Class['ceph::mon'] ->
-        Class['ceph::radosgw'] ~>
-        Service['ceph']
-
-        Class['::keystone'] -> Class['ceph::radosgw']
-      }
+#      ceph::pool {$glance_pool:
+#        user          => $glance_user,
+#        acl           => "mon 'allow r' osd 'allow class-read object_prefix rbd_children, allow rwx pool=${glance_pool}'",
+#        keyring_owner => 'glance',
+#      }
+
+#      ceph::pool {$cinder_pool:
+#        user          => $cinder_user,
+#        acl           => "mon 'allow r' osd 'allow class-read object_prefix rbd_children, allow rwx pool=${cinder_pool}, allow rx pool=${glance_pool}'",
+#        keyring_owner => 'cinder',
+#      }
+
+#      Class['ceph::conf'] -> Class['ceph::mon'] ->
+#      Ceph::Pool[$glance_pool] -> Ceph::Pool[$cinder_pool] ->
+#      Service['ceph']
+
+#      if ($::ceph::use_rgw) {
+#        include ceph::radosgw
+#        Class['ceph::mon'] ->
+#        Class['ceph::radosgw'] ~>
+#        Service['ceph']
+#
+#        Class['::keystone'] -> Class['ceph::radosgw']
+#      }
     }
 
-    'ceph-osd': {
-      if ! empty($osd_devices) {
-        include ceph::osd
-        Class['ceph::conf'] -> Class['ceph::osd'] ~> Service['ceph']
-      }
-    }
+#    'ceph-osd': {
+#      if ! empty($osd_devices) {
+#        include ceph::osd
+#        Class['ceph::conf'] -> Class['ceph::osd'] ~> Service['ceph']
+#      }
+#    }
 
     'compute': {
-      ceph::pool {$compute_pool:
-        user          => $compute_user,
-        acl           => "mon 'allow r' osd 'allow class-read object_prefix rbd_children, allow rwx pool=${cinder_pool}, allow rx pool=${glance_pool}, allow rwx pool=${compute_pool}'",
-        keyring_owner => 'nova',
-      }
+#      ceph::pool {$compute_pool:
+#        user          => $compute_user,
+#        acl           => "mon 'allow r' osd 'allow class-read object_prefix rbd_children, allow rwx pool=${cinder_pool}, allow rx pool=${glance_pool}, allow rwx pool=${compute_pool}'",
+#        keyring_owner => 'nova',
+#      }
 
       include ceph::nova_compute
 
